
====================================
Guia R√°pido de Git para Iniciantes
====================================

Autor: Rodrigo Trindade
Projeto: Langflow-Builder-AI
Reposit√≥rio: https://github.com/Trindade11/Langflow-Builder-AI.git

--------------------------------------------------
üìå CONCEITOS B√ÅSICOS
--------------------------------------------------

- CLONAR = Baixar pela primeira vez (git clone)
- PUXAR = Atualizar com o que est√° no GitHub (git pull)
- ENVIAR = Subir altera√ß√µes para o GitHub (git push)
- COMMIT = Registrar uma altera√ß√£o com mensagem
- ADD = Marcar quais arquivos ser√£o inclu√≠dos no commit
- BRANCH = Linha de desenvolvimento (ex: main)

--------------------------------------------------
üöÄ PRIMEIRA VEZ: CLONAR O REPOSIT√ìRIO
--------------------------------------------------

git clone https://github.com/Trindade11/Langflow-Builder-AI.git
cd Langflow-Builder-AI

--------------------------------------------------
üì• PARA ATUALIZAR O QUE TEM NO GITHUB
--------------------------------------------------

git pull origin main

--------------------------------------------------
‚úçÔ∏è PARA SUBIR ARQUIVOS PARA O GITHUB (MELHORES PR√ÅTICAS)
--------------------------------------------------

# PASSO 0: GARANTA QUE TODOS OS SEUS ARQUIVOS EST√ÉO SALVOS NO SEU EDITOR!

# PASSO 1: PUXE AS √öLTIMAS ALTERA√á√ïES DO GITHUB
# Isso evita conflitos e garante que voc√™ est√° trabalhando na vers√£o mais recente.
# Se houver conflitos, o Git avisar√° e voc√™ precisar√° resolv√™-los antes de prosseguir.
git pull origin main

# PASSO 2: VERIFIQUE O STATUS (OPCIONAL, MAS RECOMENDADO)
# Mostra quais arquivos foram modificados, adicionados ou exclu√≠dos.
git status

# PASSO 3: ADICIONE OS ARQUIVOS QUE VOC√ä QUER ENVIAR
# O comando abaixo adiciona TODOS os arquivos modificados e novos no diret√≥rio atual e subdiret√≥rios.
# Se quiser adicionar arquivos espec√≠ficos, use: git add nome_do_arquivo.ext
git add .

# PASSO 4: FA√áA O COMMIT DAS SUAS ALTERA√á√ïES
# O "commit" √© como salvar um ponto na hist√≥ria do seu projeto.
# A mensagem (-m) deve ser clara e descrever o que voc√™ fez.
# Boas mensagens ajudam a entender o hist√≥rico do projeto.
# Exemplo: git commit -m "Adiciona funcionalidade X ao componente Y"
git commit -m "Sua mensagem descritiva aqui"

# PASSO 5: ENVIE SEUS COMMITS PARA O GITHUB
# Isso envia todas as altera√ß√µes que voc√™ "commitou" para o reposit√≥rio remoto.
git push origin main

--------------------------------------------------
üß© OUTROS COMANDOS √öTEIS
--------------------------------------------------

git branch                # Mostra a branch atual (normalmente: main)
git log                   # Mostra o hist√≥rico de commits
git remote -v             # Mostra para onde est√° enviando/puxando

--------------------------------------------------
‚ö†Ô∏è SOBRE WARNINGS DE LF/CRLF (QUEBRAS DE LINHA)
--------------------------------------------------

# Se voc√™ vir um warning como "LF will be replaced by CRLF", isso se refere
# a como diferentes sistemas operacionais (Windows vs. Linux/Mac) lidam com
# quebras de linha em arquivos de texto. 
# Geralmente, o Git est√° configurado para normalizar isso automaticamente e
# n√£o costuma ser um problema para o funcionamento do c√≥digo, mas √© bom saber.
# Para a maioria dos casos, pode ignorar este warning se o Git completar a opera√ß√£o.

--------------------------------------------------
‚úîÔ∏è DICA FINAL
--------------------------------------------------

Sempre execute:
git pull origin main
ANTES de come√ßar a modificar o projeto!

