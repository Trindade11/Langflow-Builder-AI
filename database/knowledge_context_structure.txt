Estrutura de um documento da coleção: knowledge_context (Banco de Dados: DeepContext)

- _id: ObjectId (Identificador único do MongoDB)
- text: String (Trecho de texto, possivelmente parte de uma transcrição, de um documento, de um processos)
- embedding: Array (Vetor de embedding, ex: 1536 dimensões, suprimido na visualização do script)
- arquivo: String (URL do arquivo original)
- classificacao: String (Categoria do documento, ex: "reunião", documento, ação, meta, objetivo estratégico...)
- criado_em: ISODate (Data e hora de criação)
- atualizado_em: ISODate (Data e hora de atualização)
- gestor: Array de Strings (Nome do gestor ou gestores relacionados, ex: ["Real Investors"])
- id_entidades_participantes: Array de Strings (IDs de outras entidades/documentos relacionados)
- participantes_externos: Array de Strings (Nomes de participantes externos da reunião)
- participantes_internos: Array de Strings (Nomes de participantes internos da reunião)
- setores: Array de Strings (Setores relacionados, ex: ["Risco"])
- status: String (Status do documento, ex: "ativo")
- tipo: String (Tipo de documento, ex: "Fundos de investimentos")
- total_caracteres_documento: String (Contagem de caracteres do documento original)
- id: String (Outro ID para o documento da reunião, documento, ação, projeto...)
- id_chunk: String (id do chunk)
- resumo: String (resumo do documento)


Index: default_knowledge_context

```json
{
  "mappings": {
    "dynamic": false,
    "fields": {
      "atualizado_em": {
        "type": "date"
      },
      "classificacao": {
        "type": "token"
      },      
      "gestor": {
        "type": "stringFacet"
      },
      "id": {
        "type": "token"
      },
      "participantes_externos": {
        "type": "stringFacet"
      },
      "participantes_internos": {
        "type": "stringFacet"
      },     
      "setores": {
        "type": "stringFacet"
      }
      "text": {
        "analyzer": "lucene.portuguese",
        "type": "string"
      },
      "tipo": {
        "type": "token"
      }
    }
  }
}